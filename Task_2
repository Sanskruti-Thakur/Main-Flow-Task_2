USE StudentManagement;

# Creating the Courses table
CREATE TABLE Courses (
    course_id INT PRIMARY KEY,
    course_name VARCHAR(100) NOT NULL,
    course_description TEXT
);

# Creating the Enrolments table
CREATE TABLE Enrolments (
    enrolment_id INT PRIMARY KEY,
    student_id INT,
    course_id INT,
    enrolment_date DATE,
    FOREIGN KEY (student_id) REFERENCES Students(StudentID),
    FOREIGN KEY (course_id) REFERENCES Courses(course_id)
);

# Inserting data into Courses
INSERT INTO Courses (course_id, course_name, course_description)
VALUES
(1, 'Mathematics', 'A basic mathematics course'),
(2, 'Physics', 'An introductory course on physics'),
(3, 'Chemistry', 'Learn the basics of chemistry'),
(4, 'History', 'World history overview');

# Inserting data into Enrolments
INSERT INTO Enrolments (enrolment_id, student_id, course_id, enrolment_date)
VALUES
(1, 1, 1, '2025-01-01'),
(2, 1, 2, '2025-01-02'),
(3, 2, 3, '2025-01-03'),
(4, 3, 2, '2025-01-04');

SELECT 
    s.Name AS student_name,
    c.course_name
FROM 
    Students s
INNER JOIN 
    Enrolments e ON s.StudentID = e.student_id
INNER JOIN 
    Courses c ON e.course_id = c.course_id;
    
SELECT 
    c.course_id,
    c.course_name,
    COUNT(e.student_id) AS enrolled_students
FROM 
    Courses c
LEFT JOIN 
    Enrolments e ON c.course_id = e.course_id
GROUP BY 
    c.course_id, c.course_name;

SELECT 
    e.student_id,
    s.Name AS student_name,
    COUNT(e.course_id) AS courses_enrolled
FROM 
    Enrolments e
INNER JOIN 
    Students s ON e.student_id = s.StudentID
GROUP BY 
    e.student_id, s.Name
HAVING 
    COUNT(e.course_id) > 1;
    
SELECT 
    c.course_id,
    c.course_name
FROM 
    Courses c
LEFT JOIN 
    Enrolments e ON c.course_id = e.course_id
WHERE 
    e.enrolment_id IS NULL;
    
#List Courses with the Most Enrollments
SELECT 
    c.course_name, 
    COUNT(e.student_id) AS TotalEnrollments
FROM 
    Courses c
LEFT JOIN 
    Enrolments e ON c.course_id = e.course_id
GROUP BY 
    c.course_id, c.course_name
ORDER BY 
    TotalEnrollments DESC
LIMIT 1;

#Find Students Who Have Not Enrolled in Any Course
SELECT 
    s.StudentID, s.Name
FROM
    Students s
        LEFT JOIN
    Enrolments e ON s.StudentID = e.student_id
WHERE
    e.enrolment_id IS NULL;

